{"ast":null,"code":"/*global google*/\n\nvar script = null;\nvar initMap = async (key, mapRef, mapOptions) => {\n  return await new Promise(async (res, rej) => {\n    try {\n      if (script !== null) {\n        await _initMap(mapOptions, mapRef).then(map => {\n          document.head.appendChild(script);\n          res(map);\n        }).catch(e => {\n          res(e);\n        });\n      } else {\n        script = document.createElement(\"script\");\n        script.async = true;\n        script.type = \"text/javascript\";\n        script.id = \"googlemap\";\n        script.src = `https://maps.googleapis.com/maps/api/js?key=${key}&libraries=places`;\n        script.addEventListener(\"load\", async () => await _initMap(mapOptions, mapRef).then(map => {\n          res(map);\n        }).catch(e => {\n          res(e);\n        }));\n        document.head.appendChild(script);\n      }\n    } catch (e) {\n      rej(e);\n    }\n  });\n};\nvar unmountMap = () => {\n  try {\n    if (script !== null) document.head.removeChild(script);\n  } catch (e) {\n    console.log(e);\n  }\n};\nasync function _initMap(mapOptions, mapRef) {\n  return await new Promise((res, rej) => {\n    try {\n      let map = new google.maps.Map(mapRef, mapOptions);\n      res(map);\n    } catch (e) {\n      rej(e);\n    }\n  });\n}\nexport { initMap, unmountMap };","map":{"version":3,"names":["script","initMap","key","mapRef","mapOptions","Promise","res","rej","_initMap","then","map","document","head","appendChild","catch","e","createElement","async","type","id","src","addEventListener","unmountMap","removeChild","console","log","google","maps","Map"],"sources":["/home/anonymous/Desktop/UIA/hackathon_TeamSKY-main/src/global/LocationPickerExperimental/mapInitiatior.ts"],"sourcesContent":["/*global google*/\r\nimport { MapType } from \"./mapType\";\r\nvar script: HTMLScriptElement | null = null;\r\n\r\nvar initMap = async (key: string,\r\n    mapRef: HTMLElement,\r\n    mapOptions: {}) => {\r\n\r\n    return await new Promise<google.maps.Map>(async (res, rej) => {\r\n        try {\r\n            if (script !== null) {\r\n                await _initMap(mapOptions, mapRef).then((map) => {\r\n                    document.head.appendChild(script as HTMLScriptElement);\r\n                    res(map)\r\n                }).catch((e) => {\r\n                    res(e)\r\n                })\r\n            } else {\r\n                script = document.createElement(\"script\");\r\n                script.async = true;\r\n                script.type = \"text/javascript\"\r\n                script.id = \"googlemap\"\r\n                script.src = `https://maps.googleapis.com/maps/api/js?key=${key}&libraries=places`\r\n                script.addEventListener(\"load\", async () => await _initMap(mapOptions, mapRef).\r\n                    then((map) => {\r\n                        res(map)\r\n                    }).catch((e) => {\r\n                        res(e)\r\n                    }))\r\n                document.head.appendChild(script as HTMLScriptElement);\r\n            }\r\n        } catch (e) {\r\n            rej(e)\r\n        }\r\n    })\r\n}\r\n\r\nvar unmountMap = () => {\r\n    try {\r\n        if (script !== null)\r\n            document.head.removeChild(script)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n}\r\n\r\n\r\nasync function _initMap(mapOptions: google.maps.MapOptions, mapRef: HTMLElement) {\r\n\r\n\r\n    return await new Promise<google.maps.Map>((res, rej) => {\r\n\r\n        try {\r\n            let map = new google.maps.Map(mapRef,mapOptions)\r\n            res(map)\r\n        } catch (e) {\r\n            rej(e)\r\n        }\r\n    })\r\n}\r\n\r\nexport {\r\n    initMap,\r\n    unmountMap,\r\n};\r\n\r\n"],"mappings":"AAAA;;AAEA,IAAIA,MAAgC,GAAG,IAAI;AAE3C,IAAIC,OAAO,GAAG,MAAAA,CAAOC,GAAW,EAC5BC,MAAmB,EACnBC,UAAc,KAAK;EAEnB,OAAO,MAAM,IAAIC,OAAO,CAAkB,OAAOC,GAAG,EAAEC,GAAG,KAAK;IAC1D,IAAI;MACA,IAAIP,MAAM,KAAK,IAAI,EAAE;QACjB,MAAMQ,QAAQ,CAACJ,UAAU,EAAED,MAAM,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAK;UAC7CC,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACb,MAAM,CAAsB;UACtDM,GAAG,CAACI,GAAG,CAAC;QACZ,CAAC,CAAC,CAACI,KAAK,CAAEC,CAAC,IAAK;UACZT,GAAG,CAACS,CAAC,CAAC;QACV,CAAC,CAAC;MACN,CAAC,MAAM;QACHf,MAAM,GAAGW,QAAQ,CAACK,aAAa,CAAC,QAAQ,CAAC;QACzChB,MAAM,CAACiB,KAAK,GAAG,IAAI;QACnBjB,MAAM,CAACkB,IAAI,GAAG,iBAAiB;QAC/BlB,MAAM,CAACmB,EAAE,GAAG,WAAW;QACvBnB,MAAM,CAACoB,GAAG,GAAI,+CAA8ClB,GAAI,mBAAkB;QAClFF,MAAM,CAACqB,gBAAgB,CAAC,MAAM,EAAE,YAAY,MAAMb,QAAQ,CAACJ,UAAU,EAAED,MAAM,CAAC,CAC1EM,IAAI,CAAEC,GAAG,IAAK;UACVJ,GAAG,CAACI,GAAG,CAAC;QACZ,CAAC,CAAC,CAACI,KAAK,CAAEC,CAAC,IAAK;UACZT,GAAG,CAACS,CAAC,CAAC;QACV,CAAC,CAAC,CAAC;QACPJ,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACb,MAAM,CAAsB;MAC1D;IACJ,CAAC,CAAC,OAAOe,CAAC,EAAE;MACRR,GAAG,CAACQ,CAAC,CAAC;IACV;EACJ,CAAC,CAAC;AACN,CAAC;AAED,IAAIO,UAAU,GAAGA,CAAA,KAAM;EACnB,IAAI;IACA,IAAItB,MAAM,KAAK,IAAI,EACfW,QAAQ,CAACC,IAAI,CAACW,WAAW,CAACvB,MAAM,CAAC;EACzC,CAAC,CAAC,OAAOe,CAAC,EAAE;IACRS,OAAO,CAACC,GAAG,CAACV,CAAC,CAAC;EAClB;AAEJ,CAAC;AAGD,eAAeP,QAAQA,CAACJ,UAAkC,EAAED,MAAmB,EAAE;EAG7E,OAAO,MAAM,IAAIE,OAAO,CAAkB,CAACC,GAAG,EAAEC,GAAG,KAAK;IAEpD,IAAI;MACA,IAAIG,GAAG,GAAG,IAAIgB,MAAM,CAACC,IAAI,CAACC,GAAG,CAACzB,MAAM,EAACC,UAAU,CAAC;MAChDE,GAAG,CAACI,GAAG,CAAC;IACZ,CAAC,CAAC,OAAOK,CAAC,EAAE;MACRR,GAAG,CAACQ,CAAC,CAAC;IACV;EACJ,CAAC,CAAC;AACN;AAEA,SACId,OAAO,EACPqB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}